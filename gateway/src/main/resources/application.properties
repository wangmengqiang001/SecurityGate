#spring.jmx.enabled=true
#management.server.port=8074
management.endpoints.web.exposure.include=*


# zuul.add-host-header=true
# server.servlet.session.cookie.secure=true
zuul.routes.books.url=http://guizhou:8071
#zuul.routes.mybook.url=http://localhost:8071
zuul.routes.mybook.path=/newbook/**
zuul.routes.mybook.serviceId=book
zuul.routes.aboot.serviceId=a-bootiful-client
zuul.routes.aboot.path=/bootful/**

zuul.routes.restgreeting.serviceId=restgreeting
zuul.routes.restgreeting.path=/restg/**

# proxy to nginx front-end application1
zuul.routes.frontend.path=/frontend/**
zuul.routes.frontend.url=http://localhost:8091
zuul.routes.frontend.sensitiveHeaders=

#set-cookie,cookie,connection,content-length,content-encoding,server,transfer-encoding,x-application-context
zuul.routes.frontend.add-host-header=true
# zuul.routes.frontend.strip-prefix=false

# proxy to spring-boot web application
# forward /helloweb to /helloweb/
zuul.routes.hello.path=/helloweb
zuul.routes.hello.url=http://guizhou:8072/helloweb/
zuul.routes.hello.add-host-header=true
zuul.routes.hello.sensitiveHeaders=
zuul.routes.hello.strip-prefix=true

zuul.routes.helloweb.path=/helloweb/**
zuul.routes.helloweb.url=http://localhost:8073/
# splash at the end is required
zuul.routes.helloweb.sensitiveHeaders=

# zuul.routes.helloweb.strip-prefix=true
zuul.routes.helloweb.add-host-header=true


# zuul.routes.aboot.url=http://localhost:8080

spring.application.name=edge
# ribbon.eureka.enabled=false # must be removed
# eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.serviceUrl.defaultZone=http://guizhou:8761/eureka/
eureka.client.fetch-registry=true
server.port=8072

spring.security.oauth2.client.registration.github.client-id=29cc8cba8d8a31047867
spring.security.oauth2.client.registration.github.client-secret=fc5a9c048ba5b62886fbf6a6ea44270f134a490a

spring.security.oauth2.client.provider.cas.authorization-uri=https://sso.isc.com:8443/cas/oauth2.0/authorize
spring.security.oauth2.client.provider.cas.token-uri=https://sso.isc.com:8443/cas/oauth2.0/accessToken
spring.security.oauth2.client.provider.cas.user-info-uri=https://sso.isc.com:8443/cas/oauth2.0/profile
spring.security.oauth2.client.provider.cas.user-name-attribute=id
spring.security.oauth2.client.provider.cas.user-info-authentication-method=form
spring.security.oauth2.client.registration.casx.provider=cas

spring.security.oauth2.client.registration.casx.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.casx.client-id=casId
spring.security.oauth2.client.registration.casx.client-secret=cas-secret-key
spring.security.oauth2.client.registration.casx.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.casx.client-authentication-method=post


########################################
#spring.security.oauth2.client.registration.casx.scope=user

